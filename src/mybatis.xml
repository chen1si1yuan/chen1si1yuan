<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
                        
                        
                        <mvc:interceptors>
                     <mvc:interceptor>
                       <mvc:mapping path="/**"/>
                       <bean class="Interceptor.PathInterceptor"></bean>
                     </mvc:interceptor>
                     </mvc:interceptors>
                      
                        
                        <context:property-placeholder  location="classpath:Mysql.properties"/>
                         <context:component-scan base-package="cn.chwyteam.www"></context:component-scan>
                        <context:component-scan base-package="cn.chwyteam.www.Controller"></context:component-scan>
                   
                        
                        
                         <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  
                           <property name="driverClassName" value="${dataSource.driverClassName}"></property>
                           <property name="username" value="${dataSource.username}"></property>
                           <property name="password" value="${dataSource.password}"></property>
                           <property name="url" value="${dataSource.url}"></property>
                           <!-- 最大并发连接数 -->
                           <property name="maxActive" value="${dataSource.maxActive}" />
                           <!-- 初始化连接数量 -->
                           <property name="initialSize" value="${dataSource.initialSize}" />
                           <!-- 配置获取连接等待超时的时间 -->
                           <property name="maxWait" value="${dataSource.maxWait}" />
                           <!-- 最小空闲连接数 -->
                           <property name="minIdle" value="${dataSource.minIdle}" />  
                         </bean>
                         
                         <!-- mybatis和spring完美整合，不需要mybatis的配置映射文件 -->
                        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
                          <property name="dataSource" ref="dataSource"/>
                          
                          <property name="mapperLocations" value="classpath:cn/chwyteam/www/*/*/*.xml"></property>
                        </bean>
                        
                        
                        
                        <!-- DAO接口所在包名，Spring会自动查找其下的类  -->
                        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                          <property name="basePackage" value="cn.chwyteam.www.User.Dao"/>
                          <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
                        </bean>
                        
                        <!-- DAO接口所在包名，Spring会自动查找其下的类  -->
                        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                          <property name="basePackage" value="cn.chwyteam.www.Share.Dao"/>
                          <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
                        </bean>
                        
         
                        
                        <!-- mail sender -->    
                        <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl" >
                        <property name="host" value="smtp.qq.com"></property>  
                        <property name="port" value="465"></property> 
                        <property name="username" value="1441565921@qq.com"></property> 
                        <property name="password" value="axzzwnnnsvhwjbfe"></property> 
                         <property name="defaultEncoding" value="UTF-8"></property>  
                        <property name="javaMailProperties">  
            <props>  
                <prop key="mail.smtp.auth">true</prop> 
                <prop key="mail.smtp.timeout">250000</prop>  
                <prop key="mail.debug">true</prop> 
                <prop key="mail.smtp.ssl.enable">true</prop>  
                <prop key="mail.smtp.socketFactory.port">465</prop>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.socketFactory.fallback">false</prop>  
            </props>  
        </property>  

                        </bean> 
                         
                       
                      
                      
</beans>